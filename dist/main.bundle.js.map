{"version":3,"sources":["D:/Angular_Eduraka_Project/employee-directory/src/$_gendir lazy","D:/Angular_Eduraka_Project/employee-directory/src/app/app.component.css","D:/Angular_Eduraka_Project/employee-directory/src/app/app.component.html","D:/Angular_Eduraka_Project/employee-directory/src/app/app.component.ts","D:/Angular_Eduraka_Project/employee-directory/src/app/app.module.ts","D:/Angular_Eduraka_Project/employee-directory/src/app/model/employee.model.ts","D:/Angular_Eduraka_Project/employee-directory/src/app/services/employee.service.ts","D:/Angular_Eduraka_Project/employee-directory/src/environments/environment.ts","D:/Angular_Eduraka_Project/employee-directory/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Angular_Eduraka_Project/employee-directory/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Angular_Eduraka_Project/employee-directory/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"    <div class=\\\"container\\\">\\n      <br/>\\n      <h1 align=\\\"center\\\">{{title}}</h1><br/><br/>\\n      <form #form=\\\"ngForm\\\">      \\n      <table class=\\\"table\\\">          \\n        <thead>\\n          <tr>\\n            <td>Name</td>\\n            <td>Email</td>\\n            <td>Date of Birth</td>\\n            <td>Department</td>\\n            <td>Gender</td>\\n            <td>Age</td>\\n            <td></td>\\n            <td></td>\\n          </tr>\\n        </thead>          \\n        <tbody>\\n            <tr>   \\n                  <td>\\n                    <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"empmodel.name\\\" required  placeholder=\\\"Name\\\"/>\\n                  </td>\\n                  <td>\\n                    <input type=\\\"email\\\" name=\\\"email\\\" required class=\\\"form-control\\\" [(ngModel)]=\\\"empmodel.email\\\" placeholder=\\\"abc@xyz.com\\\"/>\\n                  </td>\\n                  <td>\\n                    <input type=\\\"date\\\"  name=\\\"dob\\\" id=\\\"datepicker\\\"  class=\\\"form-control\\\" [(ngModel)]=\\\"empmodel.dob\\\" required placeholder=\\\"YYYY-MM-DD\\\"/>\\n                  </td>\\n                  <td>\\n                    <input type=\\\"text\\\" name=\\\"department\\\"  required class=\\\"form-control\\\" [(ngModel)]=\\\"empmodel.department\\\" placeholder=\\\"Department\\\"/>\\n                  </td>\\n                  <td>\\n                    <input type=\\\"text\\\" name=\\\"gender\\\" required class=\\\"form-control\\\" placeholder=\\\"Gender\\\" [(ngModel)]=\\\"empmodel.gender\\\"/>\\n                  </td>\\n                  <td>\\n                    <input type=\\\"number\\\" name=\\\"age\\\" disabled class=\\\"form-control\\\" placeholder=\\\"Age\\\" [(ngModel)]=\\\"empmodel.age\\\"/>\\n                  </td>\\n                  <td><button name=\\\"btnadd\\\" [disabled]=\\\"!DisableUpdate\\\" class=\\\"btn btn-success btn-md\\\" (click)=\\\"AddEmployeeInfo()\\\">Add Employee</button></td>\\n                  <td><button name=\\\"btnupdate\\\" [disabled]=\\\"DisableUpdate\\\" class=\\\"btn btn-success btn-md\\\" (click)=\\\"updateEmployeeInfo()\\\" >Update Employee</button>                    \\n                  </td>  \\n            </tr> \\n            <tr *ngFor ='let employee of employeelist'>\\n                <td>{{employee.name}}</td>\\n                <td>{{employee.email}}</td>\\n                <td>{{employee.dob}}</td>\\n                <td>{{employee.department}}</td>\\n                <td>{{employee.gender}}</td>\\n                <td>{{employee.age}}</td>\\n                <td><button name=\\\"btnDelete\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"deleteEmployee(employee._id)\\\">Delete</button></td>\\n                <td><button name=\\\"btnEdit\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"EditEmployee(employee._id)\\\">Edit</button></td>\\n              </tr>\\n          </tbody>           \\n        </table>  \\n      </form>\\n      \\n    </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Angular_Eduraka_Project/employee-directory/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component,OnInit } from '@angular/core';\nimport {EmployeeService} from './services/employee.service';\nimport {Employee} from './model/employee.model'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n  \n})\nexport class AppComponent implements OnInit {\n  title = 'edureka! MEAN Application - Employee Directory App';\n  employeelist:any[];\n  errorMessage:string;\n  result:string;\n  empId:string;\n  DisableUpdate:boolean=true;\n  \n\n empmodel = new Employee();  \n\n  constructor (private _employeeService:EmployeeService)\n  {\n    \n  }\n  ngOnInit():void{\n    this.GetEmployeeList();\n  }\n  \n  GetAge() {\n    console.log(this.empmodel.dob);\n    var dob = new Date(this.empmodel.dob);\n    console.log(dob);\n    console.log(this.empmodel.dob);\n    var now = new Date();\n    var age = now.getFullYear() - dob.getFullYear();\n    this.empmodel.age = age.toString();\n    };\n\n  GetEmployeeList()\n  {\n    this._employeeService.getRequest('employees')\n    .subscribe(employeelist=>this.employeelist=employeelist,\n    error=>this.errorMessage=<any>error);\n  }\n    \n  AddEmployeeInfo()\n  {    \n    this.GetAge();    \n    this._employeeService.postRequest(this.empmodel,\"empinsert\")\n      .subscribe(data =>this.result=data);\n      \n      let empnumber = this.employeelist.push(this.empmodel);    \n  }\n\n  ClearEmployeeList()\n  {    \n      this.empmodel.name = \"\";\n      this.empmodel.email = \"\";\n      this.empmodel.dob = \"\";\n      this.empmodel.department = \"\";\n      this.empmodel.gender = \"\";\n      this.empmodel.age = \"\";\n  }\n\n  deleteEmployee(empId:string)\n  {            \n      console.log(empId);\n      this._employeeService.deleteRequest('empdelete/'+empId)\n      .subscribe(data =>this.result=data);\n      \n      for (var i=0; i <this.employeelist.length; i++)\n      {                    \n          if(this.employeelist[i]._id == empId)\n          {   \n              let removedObj = this.employeelist.splice(i,1);\n          }\n      }                    \n  }\n\n  EditEmployee(empId:string)\n  {  \n    this.empId = empId;\n    this.DisableUpdate=false;\n    \n    for (var i=0; i <this.employeelist.length; i++)\n    {                    \n        if(this.employeelist[i]._id == empId)\n        {                        \n            this.empmodel.name = this.employeelist[i].name;\n            this.empmodel.email = this.employeelist[i].email;\n            this.empmodel.dob = this.employeelist[i].dob;\n            this.empmodel.gender = this.employeelist[i].gender;\n            this.empmodel.department = this.employeelist[i].department;\n            this.empmodel.age = this.employeelist[i].age;\n        }\n    }\n  }\n\n  updateEmployeeInfo()\n  {           \n      this.GetAge();\n      this.DisableUpdate=true;\n      \n      this._employeeService.updateRequest(this.empmodel,'empupdate/'+this.empId)\n      .subscribe(data =>this.result=data);\n            \n      for (var i=0; i <this.employeelist.length; i++)\n      {                    \n          if(this.employeelist[i]._id == this.empId)\n          {                        \n              this.employeelist[i].name = this.empmodel.name;\n              this.employeelist[i].email = this.empmodel.email;\n              this.employeelist[i].dob = this.empmodel.dob;\n              this.employeelist[i].gender = this.empmodel.gender;\n              this.employeelist[i].department = this.empmodel.department;\n              this.employeelist[i].age = this.empmodel.age;\n          }\n      }\n\n      this.ClearEmployeeList();      \n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Angular_Eduraka_Project/employee-directory/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {HttpModule} from '@angular/http';\n\n\nimport { AppComponent } from './app.component';\nimport {EmployeeService} from './services/employee.service'\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [EmployeeService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// D:/Angular_Eduraka_Project/employee-directory/src/app/app.module.ts","\r\nexport class Employee {\r\n    \r\n  constructor()\r\n  {\r\n\r\n  }\r\n\r\n    public name:string;\r\n    public email:string;\r\n    public dob:string;\r\n    public department:string;\r\n    public gender:string;\r\n    public age:string\r\n    \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Angular_Eduraka_Project/employee-directory/src/app/model/employee.model.ts","import {Injectable} from '@angular/core';\r\nimport {Http,Response,RequestOptions,Headers} from '@angular/http';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\nimport {Employee} from '../model/employee.model'\r\n\r\n\r\n@Injectable()\r\n\r\nexport class EmployeeService{\r\n\r\n    private _employeeUrl = 'https://employee-directory-app-edureka.herokuapp.com/api/';\r\n\r\n    constructor (private _http:Http)\r\n    {\r\n\r\n    }\r\n\r\n    getRequest(requestType:string):Observable<any[]>{\r\n        return this._http.get(this._employeeUrl+requestType)\r\n        .map((response:Response)=><any[]>response.json())\r\n        .catch(this.handleError);\r\n    }\r\n\r\n    private handleError(error:Response){\r\n        return Observable.throw(error.json().error|| 'Server Error');\r\n    }\r\n\r\n    postRequest(employeeinfo:Employee, requestType:string):Observable<any>{\r\n        \r\n        let body = JSON.stringify(employeeinfo);        \r\n        let headers = new Headers({'Content-Type':'application/json'});\r\n        let options = new RequestOptions({headers:headers});\r\n        \r\n        return this._http.post(this._employeeUrl+requestType,body,options)\r\n        .map((response:Response)=><any[]>response.json())\r\n        .catch(this.handleError);    \r\n    }    \r\n\r\n    deleteRequest(apiUrl:string):Observable<any>{\r\n        \r\n        let headers = new Headers({'Content-Type':'application/json'});\r\n        let options = new RequestOptions({headers:headers});\r\n        \r\n        return this._http.delete(this._employeeUrl+apiUrl,options)\r\n        .map(res=>res.json)             \r\n    }\r\n\r\n    updateRequest(employeeinfo:Employee, apiUrl:string):Observable<any>{\r\n        \r\n        console.log(\"coming in service\",employeeinfo);\r\n        let body = JSON.stringify(employeeinfo);\r\n        let headers = new Headers({'Content-Type':'application/json'});\r\n        let options = new RequestOptions({headers:headers});\r\n        \r\n        return this._http.put(this._employeeUrl+apiUrl,body,options)\r\n        .map(res=>res.json); \r\n    }\r\n    \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Angular_Eduraka_Project/employee-directory/src/app/services/employee.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// D:/Angular_Eduraka_Project/employee-directory/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// D:/Angular_Eduraka_Project/employee-directory/src/main.ts"],"sourceRoot":"webpack:///"}